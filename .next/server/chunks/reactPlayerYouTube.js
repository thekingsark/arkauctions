exports.id=8446,exports.ids=[8446],exports.modules={34569:(e,t,a)=>{var s=Object.create,l=Object.defineProperty,r=Object.getOwnPropertyDescriptor,o=Object.getOwnPropertyNames,i=Object.getPrototypeOf,n=Object.prototype.hasOwnProperty,p=(e,t,a)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,y=(e,t,a,s)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let i of o(t))n.call(e,i)||i===a||l(e,i,{get:()=>t[i],enumerable:!(s=r(t,i))||s.enumerable});return e},u=(e,t,a)=>(p(e,"symbol"!=typeof t?t+"":t,a),a),c={};((e,t)=>{for(var a in t)l(e,a,{get:t[a],enumerable:!0})})(c,{default:()=>f}),e.exports=y(l({},"__esModule",{value:!0}),c);var h=((e,t,a)=>(a=null!=e?s(i(e)):{},y(!t&&e&&e.__esModule?a:l(a,"default",{value:e,enumerable:!0}),e)))(a(58009)),d=a(12740),P=a(21958);let m=/[?&](?:list|channel)=([a-zA-Z0-9_-]+)/,g=/user\/([a-zA-Z0-9_-]+)\/?/,b=/youtube-nocookie\.com/;class f extends h.Component{constructor(){super(...arguments),u(this,"callPlayer",d.callPlayer),u(this,"parsePlaylist",e=>{if(e instanceof Array)return{listType:"playlist",playlist:e.map(this.getID).join(",")};if(m.test(e)){let[,t]=e.match(m);return{listType:"playlist",list:t.replace(/^UC/,"UU")}}if(g.test(e)){let[,t]=e.match(g);return{listType:"user_uploads",list:t}}return{}}),u(this,"onStateChange",e=>{let{data:t}=e,{onPlay:a,onPause:s,onBuffer:l,onBufferEnd:r,onEnded:o,onReady:i,loop:n,config:{playerVars:p,onUnstarted:y}}=this.props,{UNSTARTED:u,PLAYING:c,PAUSED:h,BUFFERING:d,ENDED:P,CUED:m}=window.YT.PlayerState;if(t===u&&y(),t===c&&(a(),r()),t===h&&s(),t===d&&l(),t===P){let e=!!this.callPlayer("getPlaylist");n&&!e&&(p.start?this.seekTo(p.start):this.play()),o()}t===m&&i()}),u(this,"mute",()=>{this.callPlayer("mute")}),u(this,"unmute",()=>{this.callPlayer("unMute")}),u(this,"ref",e=>{this.container=e})}componentDidMount(){this.props.onMount&&this.props.onMount(this)}getID(e){return!e||e instanceof Array||m.test(e)?null:e.match(P.MATCH_URL_YOUTUBE)[1]}load(e,t){let{playing:a,muted:s,playsinline:l,controls:r,loop:o,config:i,onError:n}=this.props,{playerVars:p,embedOptions:y}=i,u=this.getID(e);if(t){if(m.test(e)||g.test(e)||e instanceof Array){this.player.loadPlaylist(this.parsePlaylist(e));return}this.player.cueVideoById({videoId:u,startSeconds:(0,d.parseStartTime)(e)||p.start,endSeconds:(0,d.parseEndTime)(e)||p.end});return}(0,d.getSDK)("https://www.youtube.com/iframe_api","YT","onYouTubeIframeAPIReady",e=>e.loaded).then(t=>{this.container&&(this.player=new t.Player(this.container,{width:"100%",height:"100%",videoId:u,playerVars:{autoplay:a?1:0,mute:s?1:0,controls:r?1:0,start:(0,d.parseStartTime)(e),end:(0,d.parseEndTime)(e),origin:window.location.origin,playsinline:l?1:0,...this.parsePlaylist(e),...p},events:{onReady:()=>{o&&this.player.setLoop(!0),this.props.onReady()},onPlaybackRateChange:e=>this.props.onPlaybackRateChange(e.data),onPlaybackQualityChange:e=>this.props.onPlaybackQualityChange(e),onStateChange:this.onStateChange,onError:e=>n(e.data)},host:b.test(e)?"https://www.youtube-nocookie.com":void 0,...y}))},n),y.events&&console.warn("Using `embedOptions.events` will likely break things. Use ReactPlayerâ€™s callback props instead, eg onReady, onPlay, onPause")}play(){this.callPlayer("playVideo")}pause(){this.callPlayer("pauseVideo")}stop(){document.body.contains(this.callPlayer("getIframe"))&&this.callPlayer("stopVideo")}seekTo(e,t=!1){this.callPlayer("seekTo",e),t||this.props.playing||this.pause()}setVolume(e){this.callPlayer("setVolume",100*e)}setPlaybackRate(e){this.callPlayer("setPlaybackRate",e)}setLoop(e){this.callPlayer("setLoop",e)}getDuration(){return this.callPlayer("getDuration")}getCurrentTime(){return this.callPlayer("getCurrentTime")}getSecondsLoaded(){return this.callPlayer("getVideoLoadedFraction")*this.getDuration()}render(){let{display:e}=this.props;return h.default.createElement("div",{style:{width:"100%",height:"100%",display:e}},h.default.createElement("div",{ref:this.ref}))}}u(f,"displayName","YouTube"),u(f,"canPlay",P.canPlay.youtube)}};